import tkinter as tk
from math import sin, ceil
from PIL import Image, ImageTk
import io
import base64

class MainWindow(tk.Tk):
    def __init__(self, width = 450, height = 250):
        super().__init__()

        self.width = width
        self.height = height

        self.geometry(f"{width}x{height}")
        self["bg"] = "black"
        self.resizable(False, False)
        self.title("India")
        self.outlineWidth = 2
        self.borderColor = "black"

        self.canvas = tk.Canvas(bg = "black")
        self.canvas.place(x = 0, y = 0, width = self.width, height = self.height)

        self.phase = 0
        self.manualFrequency = 0.0171
        self.waveFrequency = self.width * self.manualFrequency / 450

        self.chakraImageData = b''
        data = io.BytesIO(base64.b64decode(self.chakraImageData))
        self.chakraImage = Image.open(data)


        diameter = self.height // 4
        self.chakraImage = self.chakraImage.resize((diameter, diameter), Image.ANTIALIAS)
        self.chakraImage = ImageTk.PhotoImage(self.chakraImage)
        

        self.update()

    def generateSineWave(self, amplitude = 10, frequency = 1, phase = 0, top = 0, left = 0, domain = None):
        points = []
        start = 0
        end = self.width

        if domain != None:
            start = domain[0]
            end = domain[1]

        for x in range(start, end):
            y = amplitude * sin(frequency * x + phase)
            points.append(x + left)
            points.append(y + top)

        return points

    def update(self):
        #print(".", end = "")
        self.canvas.delete("all")

        # Top Border
        upperBorderPoints = self.generateSineWave(amplitude = 10, frequency = self.waveFrequency, phase = self.phase/20, top = 20, left = 0, domain = (10, self.width - 10))
        self.canvas.create_line(*upperBorderPoints, fill = self.borderColor, width = self.outlineWidth)

        # Left border
        x, y = upperBorderPoints[0], upperBorderPoints[1]
        self.canvas.create_line(x, y, x, y + self.height - 40, fill = self.borderColor, width = self.outlineWidth)

        # Right border
        x ,y = upperBorderPoints[-2], upperBorderPoints[-1]
        self.canvas.create_line(x, y, x, y + self.height - 40, fill = self.borderColor, width = self.outlineWidth)

        # Bottom border
        bottomPoints = self.generateSineWave(amplitude = 10, frequency = self.waveFrequency, phase = self.phase/20, top = self.height - 20, left = 0, domain = (10, self.width - 10))
        self.canvas.create_line(*bottomPoints, fill = self.borderColor, width = self.outlineWidth)

        # Upper Inner Sin
        up = self.generateSineWave(amplitude = 10, frequency = self.waveFrequency, phase = self.phase/20, top = 20 + 1.1 * self.height / 4, left = 0, domain = (10, self.width - 10))
        self.canvas.create_line(*up, fill = self.borderColor, width = self.outlineWidth)

        # Lower Inner Sin
        lp = self.generateSineWave(amplitude = 10, frequency = self.waveFrequency, phase = self.phase/20, top = 20 + 2.4 * self.height / 4, left = 0, domain = (10, self.width - 10))
        self.canvas.create_line(*lp, fill = self.borderColor, width = self.outlineWidth)

        # upper Fill
        outline = []
        outline.extend(upperBorderPoints.copy())
        outline.extend(up[-2:])

        lower = []
        x = []
        y = []
        for i in range(0, len(up), 2):
            lower.insert(0, up[i + 1])
            lower.insert(0, up[i])

        outline.extend(lower)
        outline.extend(upperBorderPoints[:2])

        self.canvas.create_polygon(outline, fill = "orange")


        # middle fill
        outline = []
        outline.extend(up.copy())
        outline.extend(lp[-2:])

        lower = []
        x = []
        y = []
        for i in range(0, len(lp), 2):
            lower.insert(0, lp[i + 1])
            lower.insert(0, lp[i])

        outline.extend(lower)
        outline.extend(up[:2])
        self.canvas.create_polygon(outline, fill = "white")

        # upper Fill
        outline = []
        outline.extend(lp.copy())
        outline.extend(bottomPoints[-2:])

        lower = []
        x = []
        y = []
        for i in range(0, len(bottomPoints), 2):
            lower.insert(0, bottomPoints[i + 1])
            lower.insert(0, bottomPoints[i])

        outline.extend(lower)
        outline.extend(lp[:2])

        self.canvas.create_polygon(outline, fill = "green")



        r = self.height / 7.5
        top = upperBorderPoints[ceil(len(up) / 2)+ 1] - self.height / 18
        #print(top)
        '''chakra = self.canvas.create_oval(self.width / 2 - r, self.height / 2 - r + top,
                                        self.width / 2 + r, self.height / 2 + r + top, fill = "blue")
        '''
        self.canvas.create_image(self.width / 2, self.height / 2 + top, image = self.chakraImage)

        self.phase += 1
        self.canvas.after(16, self.update)



mainWindow = MainWindow()
mainWindow.mainloop()
